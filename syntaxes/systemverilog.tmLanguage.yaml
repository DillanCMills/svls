fileTypes:
  - sv
  - SV
  - v
  - V
  - svh
  - SVH
  - vh
  - VH
hidden: true
foldingStartMarker: (begin)\s*(//.*)?$
foldingStopMarker: ^\s*(begin)$
name: SystemVerilog
patterns: 
  # Function Task capture
  - begin: '\s*\b(function|task)\b(\s+automatic)?'
    beginCaptures:
      '1': name: keyword.control.systemverilog
      '2': name: keyword.control.systemverilog
    end: ';'
    patterns:
      - match: '\b([a-zA-Z_][a-zA-Z0-9_]*\s+)?([a-zA-Z_][a-zA-Z0-9_:]*)\s*(?=\(|;)'
        captures:
          '1': name: storage.type.systemverilog
          '2': name: entity.name.function.systemverilog
      - include: '#port-dir'
      - include: '#base-grammar'
    name: meta.function.systemverilog

  - match: '\s*\b(task)\s+(automatic)?\s*(\w+)\s*;'
    captures: 
      '1': name: keyword.control.systemverilog
      '2': name: keyword.control.systemverilog
      '3': name: entity.name.function.systemverilog
    name: meta.task.simple.systemverilog

  # Typedef Struct/enum
  - begin: '\s*\b(typedef\s+(struct|enum|union)\b)\s*(packed)?\s*([a-zA-Z_][a-zA-Z0-9_]*)?'
    beginCaptures:
      '1': name: keyword.control.systemverilog
      '2': name: keyword.control.systemverilog
      '3': name: keyword.control.systemverilog
      '4': name: storage.type.systemverilog
    end: '(})\s*([a-zA-Z_][a-zA-Z0-9_]*)\s*;'
    endCaptures:
      '1': name: keyword.operator.other.systemverilog
      '2': name: entity.name.function.systemverilog
    patterns:
      - include: '#struct-anonymous'
      - include: '#base-grammar'
    name: meta.typedef.struct.systemverilog

  # Typedef class
  - match: '\s*\b(typedef\s+class)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*;'
    captures:
      '1': name: keyword.control.systemverilog
      '2': name: entity.name.declaration.systemverilog
    name: meta.typedef.class.systemverilog

  # Typedef simple
  - begin: '\s*\b(typedef)\b'
    beginCaptures:
      '1': name: keyword.control.systemverilog
    end: '([a-zA-Z_][a-zA-Z0-9_]*)\s*(?=(\[[a-zA-Z0-9_:\$\-\+]*\])?;)'
    endCaptures:
      '1': name: entity.name.function.systemverilog
    patterns: 
      - match: '\b([a-zA-Z_]\w*)\s*(#)\('
        captrues:
          '1': name: storage.type.userdefined.systemverilog
          '2': name: keyword.operator.param.systemverilog
        name: meta.typedef.class.systemverilog
      - include: '#base-grammar'
      - include: '#module-binding'
    name: meta.typedef.simple.systemverilog
  
  # Module declaration
  - begin: '\s*(module)\s+\b([a-zA-Z_][a-zA-Z0-9_]*)\b'
    beginCaptures: 
      '1': name: keyword.control.systemverilog
      '2': name: entity.name.type.module.systemverilog
    end: ';'
    endCaptures:
      '1': name: entity.name.function.systemverilog
    patterns:
      - include: '#port-dir'
      - match: '\s*(parameter)'
        name: keyword.other.systemverilog
      - include: '#base-grammar'
      - include: '#ifmodport'
    name: meta.module.systemverilog

  # Sequence
  - captures: 
      '1': name: keyword.control.systemverilog
      '2': name: entity.name.function.systemverilog
    match: '\b(sequence)\s+([a-zA-Z_][a-zA-Z0-9_]*)'
    name: meta.sequence.systemverilog

  # Bind directive
  - match: \b(bind)\s+([a-zA-Z_][a-zA-Z0-9_\.]*)\b
    captures: 
      '1': name: keyword.control.systemverilog
      # '2': name: 
    # name: 

  # Labeled block
  - captures: 
      '0': name: meta.section.begin.systemverilog
      '1': name: keyword.other.block.systemverilog
      '3': name: keyword.operator.systemverilog
      '4': name: entity.name.section.systemverilog
    # This matches leading spaces to make the symbol list work
    match: '\s*(begin|fork)\s*((:)\s*([a-zA-Z_][a-zA-Z0-9_]*))\b'
    name: meta.definition.systemverilog

  # SVA property
  - match: '\b(property)\s+(\w+)'
    captures: 
      '1': name: keyword.sva.systemverilog
      '2': name: entity.name.sva.systemverilog

  # SVA assert
  - match: '\b(\w+)\s*(:)\s*(assert)\b'
    captures: 
      '1': name: entity.name.sva.systemverilog
      '2': name: keyword.operator.systemverilog
      '3': name: keyword.sva.systemverilog

  # PSL one-liner
  - begin: '\s*(//)\s*(psl)\s+((\w+)\s*(:))?\s*(default|assert|assume)'
    beginCaptures: 
      '0': name: meta.psl.systemverilog
      '1': name: comment.line.double-slash.systemverilog
      '2': name: keyword.psl.systemverilog
      '4': name: entity.psl.name.systemverilog
      '5': name: keyword.operator.systemverilog
      '6': name: keyword.psl.systemverilog
    end: ';'
    patterns: 
      - match: '\b(never|always|default|clock|within|rose|fell|stable|until|before|next|eventually|abort|posedge)\b'
        name: keyword.psl.systemverilog
      - include: '#operators'
      - include: '#functions'
      - include: '#constants'
    name: meta.psl.systemverilog

  # PSL multiline
  - begin: '\s*(/\*)\s*(psl)'
    beginCaptures: 
      '0': name: meta.psl.systemverilog
      '1': name: comment.block.systemverilog
      '2': name: keyword.psl.systemverilog
    end: (\*/)
    endCaptures: 
      '1': name: comment.block.systemverilog
    patterns: 
      - match: '^\s*((\w+)\s*(:))?\s*(default|assert|assume)'
        captures: 
          '0': name: meta.psl.systemverilog
          '2': name: entity.psl.name.systemverilog
          '3': name: keyword.operator.systemverilog
          '4': name: keyword.psl.systemverilog
      - match: '\b(property)\s+(\w+)'
        captures: 
          '1': name: keyword.psl.systemverilog
          '2': name: entity.psl.name.systemverilog
      - match: '\b(never|always|default|clock|within|rose|fell|stable|until|before|next|eventually|abort|posedge|negedge)\b'
        name: keyword.psl.systemverilog
      - include: '#operators'
      - include: '#functions'
      - include: '#constants'
    name: meta.psl.systemverilog

  # System Verilog Keyword
  - match: '\s*\b(automatic|cell|config|deassign|defparam|design|disable|edge|endconfig|endgenerate|endspecify|endtable|event|generate|genvar|ifnone|incdir|instance|liblist|library|macromodule|negedge|noshowcancelled|posedge|pulsestyle_onevent|pulsestyle_ondetect|scalared|showcancelled|specify|specparam|table|use|vectored)\b'
    captures: 
      '1': name: keyword.other.systemverilog

  - match: '\s*\b(initial|always|wait|force|release|assign|always_comb|always_ff|always_latch|forever|repeat|while|for|if|iff|else|case|casex|casez|default|endcase|return|break|continue|do|foreach|with|inside|dist|clocking|cover|coverpoint|property|bins|binsof|illegal_bins|ignore_bins|randcase|modport|matches|solve|static|assert|assume|before|expect|cross|ref|first_match|srandom|struct|packed|final|chandle|alias|tagged|extern|throughout|timeprecision|timeunit|priority|type|union|uwire|wait_order|triggered|randsequence|import|export|context|pure|intersect|wildcard|within|new|typedef|enum|this|super|begin|fork|forkjoin|unique|unique0|priority)\b'
    captures: 
      '1': name: keyword.control.systemverilog
    
  - match: '\s*\b(end|endtask|endmodule|endfunction|endprimitive|endclass|endpackage|endsequence|endprogram|endclocking|endproperty|endgroup|endinterface|join|join_any|join_none)\b(\s*(:)\s*(\w+))?'
    captures: 
      '1': name: keyword.control.systemverilog
      '3': name: keyword.operator.systemverilog
      '4': name: entity.label.systemverilog
    name: meta.object.end.systemverilog

  - match: \b(std)\b::
    name: support.class.systemverilog

  - captures: 
      '1': name: constant.other.define.systemverilog
      '2': name: entity.name.type.define.systemverilog
    match: '^\s*(`define)\s+([a-zA-Z_][a-zA-Z0-9_]*)'
    name: meta.define.systemverilog

  - include: '#comments'

  - captures: 
      '1': name: keyword.control.systemverilog
      '2': name: entity.name.type.class.systemverilog
    match: '\s*(primitive|package|constraint|interface|covergroup|program)\s+\b([a-zA-Z_][a-zA-Z0-9_]*)\b'
    name: meta.definition.systemverilog

  - captures: 
    '2': name: entity.name.type.class.systemverilog
    '3': name: keyword.operator.other.systemverilog
    '4': name: keyword.control.systemverilog
    match: '(([a-zA-Z_][a-zA-Z0-9_]*)\s*(:))?\s*(coverpoint|cross)\s+([a-zA-Z_][a-zA-Z0-9_]*)'
    name: meta.definition.systemverilog

  - captures: 
      '1': name: keyword.control.systemverilog
      '2': name: keyword.control.systemverilog
      '3': name: entity.name.type.class.systemverilog
    match: '\b(virtual\s+)?(class)\s+\b([a-zA-Z_][a-zA-Z0-9_]*)\b'
    name: meta.definition.class.systemverilog

  - captures: 
      '1': name: keyword.control.systemverilog
      '2': name: entity.other.inherited-class.systemverilog
    match: '\b(extends)\s+([a-zA-Z_][a-zA-Z0-9_]*)\b'
    name: meta.definition.systemverilog

  - include: '#all-types'
  - include: '#operators'
  - include: '#port-dir'

  - match: '\b(and|nand|nor|or|xor|xnor|buf|not|bufif[01]|notif[01]|r?[npc]mos|tran|r?tranif[01]|pullup|pulldown)\b'
    name: support.type.systemverilo

  - include: '#strings'

  - match: '\$\b([a-zA-Z_][a-zA-Z0-9_]*)\b'
    name: support.function.systemverilog

  # Cast operator
  - match: '\b([a-zA-Z_][a-zA-Z0-9_]*)(')(?=\()'
    name: meta.cast.systemverilog
    captures: 
      '1': name: storage.type.systemverilog
      '2': name: keyword.operator.cast.systemverilog

  # Parameter/localparameter with no type in uppercase
  - match: '^\s*(localparam|parameter)\s+([A-Z_][A-Z0-9_]*)\b\s*(?=(=))'
    name: meta.param.systemverilog
    captures: 
      '1': name: keyword.other.systemverilog
      '2': name: constant.other.systemverilog

  # Parameter/localparameter with no type
  - match: '^\s*(localparam|parameter)\s+([a-zA-Z_][a-zA-Z0-9_]*)\b\s*(?=(=))'
    name: meta.param.systemverilog
    captures: 
      '1': name: keyword.other.systemverilog

  # Variable/Parameter/localparameter with user-defined type
  - match: ^\s*(local\s+|protected\s+|localparam\s+|parameter\s+)?(const\s+|virtual\s+)?(rand\s+|randc\s+)?(([a-zA-Z_][a-zA-Z0-9_]*)(::))?([a-zA-Z_][a-zA-Z0-9_]*)\b\s*(?=(#\s*\([\w,]+\)\s*)?([a-zA-Z][a-zA-Z0-9_\s\[\]']*)(;|,|=|'\{))
    name: meta.userdefined.systemverilog
    captures: 
      '1': name: keyword.other.systemverilog
      '2': name: keyword.other.systemverilog
      '3': name: storage.type.rand.systemverilog
      '5': name: support.type.scope.systemverilog
      '6': name: keyword.operator.scope.systemverilog
      '7': name: storage.type.userdefined.systemverilog

  - match: '\s*\b(option)\.'
    captures: 
      '1': name: keyword.cover.systemverilog

  - match: '\s*\b(local|const|protected|virtual|localparam|parameter)\b'
    captures: 
      '1': name: keyword.other.systemverilog

  - match: '\s*\b(rand|randc)\b'
    name: storage.type.rand.systemverilog

  # Module instantiation with parameter
  - begin: '^(\s*(bind)\s+([a-zA-Z_][\w\.]*))?\s*([a-zA-Z_][a-zA-Z0-9_]*)\s*(?=#[^#])'
    beginCaptures: 
      2: name: keyword.control.systemverilog
      4: name: storage.module.systemverilog
    end: (?=;|=|:)
    patterns: 
      - include: '#module-binding'
      - include: '#module-param'
      - include: '#comments'
      - include: '#operators'
      - include: '#constants'
      - include: '#strings'
      - match: \b([a-zA-Z_][a-zA-Z0-9_]*)\b(?=\s*(\(|$))
        name: entity.name.type.module.systemverilog
    name: meta.module.inst.param.systemverilog

    # Module instantiation with no param
  - begin: '\b([a-zA-Z_][a-zA-Z0-9_]*)\s+(?!intersect|and|or|throughout|within)([a-zA-Z_][a-zA-Z0-9_]*)\s*(\[(\d+)(\:(\d+))?\])?\s*(\(|$)'
    beginCaptures: 
      '1': name: storage.module.systemverilog
      '2': name: entity.name.type.module.systemverilog
      '4': name: constant.numeric.systemverilog
      '6': name: constant.numeric.systemverilog
    end: ';'
    patterns: 
      - include: '#module-binding'
      - include: '#comments'
      - include: '#strings'
      - include: '#operators'
      - include: '#constants'
    name: meta.module.inst.systemverilog

    # Struct assignement (could also match array assignment)
    - name: meta.struct.assign.systemverilo
      begin: '\b\s+(&lt;?=)\s*(\'\{)'
      beginCaptures: 
        '1': name: keyword.operator.other.systemverilog
        '2': name: keyword.operator.other.systemverilog
        '3': name: keyword.operator.other.systemverilog
      end: ';'
      patterns: 
        - match: '\b(\w+)\s*(:)(?!:)'
        - captures: 
          '1': name: support.function.field.systemverilog
          '2': name: keyword.operator.other.systemverilog
        - include: '#comments'
        - include: '#strings'
        - include: '#operators'
        - include: '#constants'
        - include: '#storage-scope-systemverilog'
    
    - include: '#storage-scope-systemverilog'
    - include: '#functions'
    - include: '#constants'    

repository:
  expression: 
    patterns: 
      - {include: }
      - {include: }
    letter: 
      match: 
      name: 
    paren-expression: 
      begin: 
      end: 
      beginCaptures: 
        '0': {name: }
      endCaptures:
        '0': {name: }
      name:
      patterns:
        - {include: }
scopeName: source.systemverilog
uuid: 789be04c-8b74-352e-8f37-63d336001277